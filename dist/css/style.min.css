body{background-color:#fff;color:#251919;font-family:Poppins,sans-serif;font-size:3rem;margin:0;padding:0}img{width:100%}p{font-weight:400;line-height:1.5}h1,h2,h3,h4,h5,h6,p{font-size:3rem;margin:0}h1,h2,h3,h4,h5,h6{line-height:1.2}a{text-decoration:none}a:hover{text-decoration:underline}.container{max-width:1440px;margin:auto;padding:25px}@media screen and (min-width:576px){.container{max-width:92%}}@media screen and (min-width:960px){.container{width:1180px;max-width:90%}}@media screen and (min-width:1440px){.container{width:1440px;max-width:90%}}nav{position:fixed;width:100%;z-index:1;background:hsla(0,0%,100%,.7);box-shadow:0 4px 10px 10px hsla(0,1%,45%,.25);text-transform:uppercase}.nav-container{display:flex;align-items:center;justify-content:center;max-width:1440px;margin:auto}.navbar-logo{justify-self:flex-start;display:inline-block;width:25%}.navbar-logo__link{display:flex;height:100%;width:100%}.navbar-logo__img{width:65%;max-width:60px}.navbar-media{display:flex;justify-content:center;width:25%}.navbar-media__icon{display:flex;margin-right:10%;max-width:40px}nav ul li{padding:20px;display:none;margin:0 auto;font-size:1.4rem}.navbar-btn{position:relative;display:inline-block;cursor:pointer;transition:all .5s ease-in-out;padding:10px;margin:0 auto}.navbar-btn :after,.navbar-btn__hamburger,.navbar-btn__hamburger:before{width:40px;height:5px;background:#494747;border-radius:5px;transition:all .5s ease-in-out}.navbar-btn :after,.navbar-btn__hamburger:before{content:"";position:absolute}.navbar-btn__hamburger:before{transform:translateY(-11px)}.navbar-btn__hamburger:after{transform:translateY(11px)}@media screen and (min-width:960px){.navbar-btn{display:none}nav ul li{display:inline-block}}.header{background-image:url(/src/img/headersmall.jpg);background-size:cover;background-repeat:no-repeat;background-position:center 20%}.header-content{font-size:1.2rem;color:#fff;animation:a .8s cubic-bezier(.215,.61,.355,.8) 1s both;display:inline-block}.header-content__rectangle{-o-object-position:20px 20px;object-position:20px 20px;width:150px;border:5px solid hsla(0,0%,76%,.5137254902);padding-left:15px}.header-content__signature{font-size:1.6rem;display:block;white-space:nowrap;line-height:40px;font-weight:200;margin-left:10px}.header-content-bottom:before{content:"";border:1px solid #fff;position:absolute;height:29%}.header .container--flex{display:flex;justify-content:flex-start;align-items:center}.header .heading--level1{line-height:60px;font-weight:200}@keyframes a{0%{filter:blur(12px);opacity:0;transform:translateX(200px)}to{filter:blur(0);opacity:1;transform:translateX(0)}}.aboutus{text-align:center}.aboutus__heading{display:inline-block;text-transform:uppercase;font-size:2rem;font-weight:500}.aboutus__border{border:1px solid #000;width:80%;margin:3% auto}.aboutus__subheading{font-size:1.6rem;font-weight:300;text-transform:uppercase}.aboutus-box{display:flex;width:100%;padding-top:5%;overflow:hidden;padding:5%}.aboutus-box-text{display:flex;justify-content:center;align-items:center;flex-direction:column;width:50%;margin-right:5%}.aboutus-box-text__paragraph{text-align:left;font-size:1.2rem;line-height:25px}.aboutus-box-text__paragraph--second{display:none}.aboutus-box__image{width:60%;background-color:pink;background-image:url(/dist/img/image5.png);background-position:50%;background-repeat:no-repeat;background-size:contain}.btn--aboutus{display:block;margin-top:10%;animation:b 2s infinite}@keyframes b{0%{transform:scale(.9)}70%{transform:scale(1);box-shadow:0 0 0 2px rgba(90,153,212,0)}to{transform:scale(.9);box-shadow:0 0 0 0 rgba(90,153,212,0)}}@media screen and (min-width:960px){.aboutus-box-text p{font-size:1.4rem;line-height:40px}.aboutus-box-text__paragraph--second{display:block}.btn--aboutus{display:none}}.attributes-first{background-image:url(/src/img/vector.jpg);background-size:cover;background-repeat:no-repeat;background-position:50%;position:relative}.attributes-first__heading{text-transform:uppercase;line-height:5rem;font-size:2rem;color:#fff;font-weight:500;letter-spacing:.3rem}.attributes-first__border{border:1px solid #fff;width:80%;margin:3% auto}.attributes-box{display:flex;flex-direction:column;flex-wrap:nowrap;align-items:center;width:100%;margin:0 auto}.attributes-first-set{display:flex;justify-content:space-between;align-items:center;align-content:center;width:80%;margin:5% 0}.attributes-first-set p{font-size:1.2rem;color:#fff;text-transform:uppercase;font-weight:600;display:inline-block}.circle{display:inline-block;width:47px;height:47px;border:5px solid #fff;border-radius:100%;background-color:transparent;position:relative;top:0;left:0;margin-left:10px}@media screen and (min-width:576px){.attributes-first-set p{font-size:1.8rem;text-transform:uppercase;font-weight:600}.circle{width:80px;height:80px;border:10px solid #fff}}@media screen and (min-width:960px){.attributes-box{width:70%}.attributes-first__heading{line-height:5rem;font-size:2.4rem;color:#fff;font-weight:500;letter-spacing:.3rem}.attributes-first .attributes-first-set p{font-size:2.5rem;color:#fff;text-transform:uppercase;font-weight:600}.attributes-first .circle{width:90px;height:90px;border:10px solid #fff}}.btn{font-size:1.4rem;padding:5%;text-transform:uppercase;text-align:center;letter-spacing:-1px;color:#fff;border:none;border-radius:8px;background:rgba(90,153,212,0);cursor:pointer;box-shadow:0 0 0 0 hsla(0,0%,5%,.5)}*,:after,:before{box-sizing:border-box;padding:0;margin:0}html{font-size:62.5%;scroll-behavior:smooth}img{max-width:100%}ul{margin:0;padding:0}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
